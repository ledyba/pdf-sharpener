package main

import (
	"bytes"
	"image"
	"image/jpeg"
)

/*
import numpy as np

np.interp(
  np.arange(0, 256),
  [0, 128, 128, 200, 255], # from
  [0, 0, 128, 255, 255], # to
).astype(np.uint8)
*/

var LUT = []uint8{
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 129,
	131, 133, 135, 136, 138, 140, 142, 143, 145, 147, 149, 150, 152,
	154, 156, 157, 159, 161, 163, 165, 166, 168, 170, 172, 173, 175,
	177, 179, 180, 182, 184, 186, 187, 189, 191, 193, 195, 196, 198,
	200, 202, 203, 205, 207, 209, 210, 212, 214, 216, 217, 219, 221,
	223, 225, 226, 228, 230, 232, 233, 235, 237, 239, 240, 242, 244,
	246, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255,
}

func FilterImage(orig []byte) ([]byte, error) {
	var err error
	decoded, err := jpeg.Decode(bytes.NewReader(orig))
	if err != nil {
		return nil, err
	}
	img, ok := decoded.(*image.Gray)
	if !ok {
		return orig, nil
	}
	for idx := range img.Pix {
		img.Pix[idx] = LUT[img.Pix[idx]]
	}
	buf := bytes.Buffer{}
	err = jpeg.Encode(&buf, img, &jpeg.Options{Quality: 90})
	if err != nil {
		return nil, err
	}
	return buf.Bytes(), nil
}
